module traffic_light (
input wire clk, reset,
output reg [1:0] red, yellow, green
);  

localparam S_RED	= 2'b00;
localparam S_GREEN	= 2'b01;
localparam S_YELLOW	= 2'b10;

reg [1:0] state, next_state;
reg [4:0] timer;

always @(posedge clk or posedge reset) begin
	if (reset) begin
		state <= S_RED;
		timer <= 4'd20;
        end
	else begin
		if (timer == 0) begin
		    state <= next_state;
		    case (next_state)
                    S_RED:    timer <= 4'd20;
                    S_GREEN:  timer <= 4'd15;
                    S_YELLOW: timer <= 4'd5;
                    default:  timer <= 4'd20;
                endcase
            end
        end
    end
 
    always @(*) begin
        case (state)
            S_RED:    next_state = S_GREEN;
            S_GREEN:  next_state = S_YELLOW;
            S_YELLOW: next_state = S_RED;
            default:  next_state = S_RED;
        endcase
    end

    always @(*) begin
        red    = (state == S_RED);
        green  = (state == S_GREEN);
        yellow = (state == S_YELLOW);
    end

endmodule




